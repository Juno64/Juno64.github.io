// Generated by CoffeeScript 2.3.1
(function() {
  var back, buttons, currentlyIsBuzzing, finish, next, question, questionAnswered, questionEnded, questionFinished, questionText, questions, randomize, readInterval, readSpeed, search, word;

  console.log('up!');

  window.addEventListener('keydown', function(e) {
    if (e.keyCode === 32 && e.target === document.body) {
      e.preventDefault();
    }
  });

  readSpeed = 120;

  currentlyIsBuzzing = false;

  questionEnded = false;

  questionFinished = false;

  questionAnswered = false;

  buttons = false;

  questions = null;

  question = null;

  questionText = null;

  readInterval = null;

  word = 0;

  back = function() {
    question = questions[(questions.indexOf(question) - 2 + questions.length) % questions.length];
    return next();
  };

  next = function() {
    var e;
    finish();
    try {
      readSpeed = Number($('#readSpeed').val());
    } catch (error) {
      e = error;
      alert('read speed was not a number!');
      readSpeed = 120;
    }
    questionEnded = false;
    questionFinished = false;
    question = questions[(questions.indexOf(question) + 1) % questions.length];
    $('#metadata').empty();
    $('#metadata').append('<li class="breadcrumb-item">' + question.tournament.year + ' ' + question.tournament.name + '</li>');
    $('#metadata').append('<li class="breadcrumb-item">Difficulty Level ' + question.difficulty + '</li>');
    $('#metadata').append('<li class="breadcrumb-item">' + question.category + '</li>');
    $('#metadata').append('<li class="breadcrumb-item">' + question.subcategory + '</li>');
    $('#metadata').append('<li class="breadcrumb-item">QuizDB ID #' + question.id + '</li>');
    $('#metadata').append('<li class="breadcrumb-item">Question ' + (questions.indexOf(question) + 1) + ' of ' + questions.length + '</li>');
    questionText = question.text.question.split(' ');
    $('#question').text('');
    if (buttons) {
      $('#answer').text('Click the button to buzz.');
      $('#b').text('Buzz');
    } else {
      $('#answer').text('Press [space] to buzz.');
    }
    readInterval = window.setInterval(function() {
      if (currentlyIsBuzzing || questionFinished || questionEnded) {
        return;
      }
      $('#question').append(questionText[word] + ' ');
      word++;
      if (word === questionText.length) {
        $('#question').append(' (end) ');
        questionEnded = true;
      }
    }, readSpeed);
  };

  randomize = function() {
    var currentIndex, randomIndex, temporaryValue;
    currentIndex = questions.length;
    while (0 !== currentIndex) {
      randomIndex = Math.floor(Math.random() * currentIndex);
      currentIndex -= 1;
      temporaryValue = questions[currentIndex];
      questions[currentIndex] = questions[randomIndex];
      questions[randomIndex] = temporaryValue;
    }
    question = null;
    next();
  };

  finish = function() {
    questionEnded = true;
    questionFinished = true;
    window.clearInterval(readInterval);
    if (questionText != null) {
      while (word < questionText.length) {
        $('#question').append(questionText[word] + ' ');
        word++;
      }
    }
    word = 0;
    if (question != null) {
      $('#answer').text(question.text.answer);
    }
  };

  search = function() {
    var searchParameters, url;
    searchParameters = {
      query: $('#query').val(),
      categories: $('#categories').val(),
      subcategories: $('#subcategories').val(),
      difficulties: $('#difficulties').val(),
      tournaments: $('#tournaments').val(),
      searchType: $('#searchType').find(':selected').val()
    };
    url = '';
    url += searchParameters.query;
    url += '!';
    url += searchParameters.categories;
    url += '!';
    url += searchParameters.subcategories;
    url += '!';
    url += searchParameters.difficulties;
    url += '!';
    url += searchParameters.tournaments;
    url += '!';
    url += searchParameters.searchType;
    finish();
    $('#question').text('this may take a while...');
    $('#answer').text('');
    console.log(url);
    $.getJSON('search/' + url, function(res) {
      questions = res;
      console.log(questions);
      if (questions.length === 0) {
        $('#question').text('No questions found. Try loosening your filters.');
        return;
      }
      question = null;
      next();
    });
  };

  $(document).ready(function() {
    $('.btn-block').hide();
    $('#searchType').val('a');
    $('#p').click(function() {
      if (buttons) {
        buttons = false;
        $('.btn-block').hide();
      } else {
        buttons = true;
        $('.btn-block').show();
      }
    });
    $('#s').click(function() {
      search();
    });
    $('#n').click(function() {
      next();
    });
    $('#m').click(function() {
      back();
    });
    $('#r').click(function() {
      randomize();
    });
    $('#b').click(function() {
      if (currentlyIsBuzzing && !questionFinished) {
        finish();
        currentlyIsBuzzing = false;
      } else if (!questionFinished) {
        $('#question').append('(#) ');
        $('#answer').text('Click again to reveal.');
        $('#b').text('Reveal');
        currentlyIsBuzzing = true;
      }
    });
    $(document).keyup(function() {
      if (document.activeElement.tagName !== 'BODY') {
        return;
      }
      if (event.which === 32) {
        if (currentlyIsBuzzing && !questionFinished) {
          finish();
          currentlyIsBuzzing = false;
        } else if (!questionFinished) {
          $('#answer').text('Press [space] to reveal.');
          $('#question').append('(#) ');
          currentlyIsBuzzing = true;
        }
      } else if (event.which === 78) {
        next();
      } else if (event.which === 66) {
        back();
      } else if (event.which === 83) {
        search();
      } else if (event.which === 82) {
        randomize();
      }
    });
  });

}).call(this);